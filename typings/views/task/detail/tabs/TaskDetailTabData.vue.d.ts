declare const _default: import("@vue/runtime-core").DefineComponent<{}, {
    filter: import("@vue/reactivity").ComputedRef<FilterConditionData[]>;
    displayAllFields: import("@vue/reactivity").ComputedRef<boolean>;
    allSpiderDict: import("@vue/reactivity").ComputedRef<Map<string, BaseModel>>;
    id: import("@vue/reactivity").ComputedRef<string | string[]>;
    modeOptions: SelectOption[];
    modeOptionsDict: import("@vue/reactivity").ComputedRef<Map<string, SelectOption>>;
    priorityOptions: SelectOption[];
    getPriorityLabel: (priority: number) => string;
    getNewForm: DefaultFormFunc<any>;
    getNewFormList: () => any[];
    form: import("@vue/reactivity").ComputedRef<BaseModel>;
    formRef: import("@vue/reactivity").Ref<any>;
    isSelectiveForm: import("@vue/reactivity").ComputedRef<boolean>;
    selectedFormFields: import("@vue/reactivity").ComputedRef<string[]>;
    formList: import("@vue/reactivity").ComputedRef<BaseModel[]>;
    validateForm: () => Promise<any>;
    resetForm: () => void;
    isFormItemDisabled: (prop: string) => boolean;
    activeDialogKey: import("@vue/reactivity").ComputedRef<DialogKey | undefined>;
    createEditDialogVisible: import("@vue/reactivity").ComputedRef<boolean>;
    allListSelectOptions: import("@vue/reactivity").ComputedRef<SelectOption[]>;
    allListSelectOptionsWithEmpty: import("@vue/reactivity").ComputedRef<SelectOption[]>;
    allDict: import("@vue/reactivity").ComputedRef<Map<string, BaseModel>>;
    confirmDisabled: import("@vue/reactivity").ComputedRef<boolean>;
    confirmLoading: import("@vue/reactivity").ComputedRef<boolean>;
    setConfirmLoading: (value: boolean) => void;
    actionFunctions: CreateEditDialogActionFunctions;
    onAdd: (index: number) => void;
    onClone: (index: number) => void;
    onDelete: (index: number) => void;
    onFieldChange: (rowIndex: number, prop: string, value: any) => void;
    onFieldRegister: (rowIndex: number, prop: string, formRef: import("@vue/reactivity").Ref) => void;
}, {}, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{}>>, {}, {}>;
export default _default;
